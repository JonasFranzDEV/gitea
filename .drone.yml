workspace:
  base: /srv/app
  path: src/code.gitea.io/gitea

clone:
  git:
    image: plugins/git:1
    depth: 50
    tags: true

pipeline:
  pre-build:
    image: webhippie/nodejs:latest
    pull: true
    commands:
      - npm install
      - make stylesheets-check
    when:
      event: [ push, tag, pull_request ]

  build-without-gcc:
    image: webhippie/golang:1.8
    pull: true
    environment:
      GOPATH: /srv/app
    commands:
      - go build -o gitea_no_gcc # test if build succeeds without the sqlite tag
    when:
      event: [ push, tag, pull_request ]

  build:
    image: webhippie/golang:edge
    pull: true
    environment:
      TAGS: bindata sqlite
      GOPATH: /srv/app
    commands:
      - make clean
      - make generate
      - make vet
      - make lint
      - make fmt-check
      - make swagger-check
      - make misspell-check
      - make test-vendor
      - make build
    when:
      event: [ push, tag, pull_request ]

  test:
    image: webhippie/golang:edge
    pull: true
    group: test
    environment:
      TAGS: bindata sqlite
      GOPATH: /srv/app
    commands:
      - make unit-test-coverage
    when:
      event: [ push, pull_request ]
      branch: [ master ]

  test:
    image: webhippie/golang:edge
    pull: true
    group: test
    environment:
      TAGS: bindata sqlite
      GOPATH: /srv/app
    commands:
      - make test
    when:
      event: [ push, pull_request ]
      branch: [ release/* ]

  test:
    image: webhippie/golang:edge
    pull: true
    group: test
    environment:
      TAGS: bindata
      GOPATH: /srv/app
    commands:
      - make test
    when:
      event: [ tag ]

  # Commented until db locking have been resolved!
  # test-sqlite:
  #   image: webhippie/golang:edge
  #   pull: true
  #   group: test
  #   environment:
  #     TAGS: bindata
  #     GOPATH: /srv/app
  #   commands:
  #     - make test-sqlite
  #   when:
  #     event: [ push, tag, pull_request ]

  test-mysql:
    image: webhippie/golang:edge
    pull: true
    group: test
    environment:
      TAGS: bindata
      GOPATH: /srv/app
    commands:
      - make integration-test-coverage
    when:
      event: [ push, pull_request ]
      branch: [ master ]

  test-mysql:
    image: webhippie/golang:edge
    pull: true
    group: test
    environment:
      TAGS: bindata
      GOPATH: /srv/app
    commands:
      - make test-mysql
    when:
      event: [ tag ]

  test-pgsql:
    image: webhippie/golang:edge
    pull: true
    group: test
    environment:
      TAGS: bindata
      GOPATH: /srv/app
    commands:
      - make test-pgsql
    when:
      event: [ push, tag, pull_request ]

  generate-coverage:
    image: webhippie/golang:edge
    pull: true
    environment:
      TAGS: bindata
      GOPATH: /srv/app
    commands:
      - make coverage
    when:
      event: [ push, pull_request ]
      branch: [ master ]

  coverage:
    image: robertstettner/drone-codecov
    secrets: [ codecov_token ]
    files:
      - coverage.all
    when:
      event: [ push, pull_request ]
      branch: [ master ]

services:
  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    when:
      event: [ push, tag, pull_request ]

  pgsql:
    image: postgres:9.5
    environment:
      - POSTGRES_DB=test
    when:
      event: [ push, tag, pull_request ]
